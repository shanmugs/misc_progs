import jp.classmethod.aws.gradle.lambda.AWSLambdaUpdateFunctionCodeTask
import jp.classmethod.aws.gradle.lambda.AWSLambdaInvokeTask

group 'com.okta.serverless.awslambda'
version '1.0-SNAPSHOT'

apply plugin: 'java'

ext {
    lambdaName = "stripSpaces"
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.30"
    }
}

apply plugin: 'jp.classmethod.aws'
apply plugin: "jp.classmethod.aws.lambda"
aws {
    profileName = "default"
    region = "us-west-2"
}

sourceCompatibility = 1.11

repositories {
  mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
    implementation 'com.amazonaws:aws-lambda-java-events:2.2.7'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.okta.jwt:okta-jwt-verifier:0.4.0'
    implementation 'com.okta.jwt:okta-jwt-verifier-impl:0.4.0'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

task deploy(type: AWSLambdaUpdateFunctionCodeTask) {
    functionName = lambdaName
    zipFile =  file(buildZip.archiveFile)
}

build.dependsOn buildZip